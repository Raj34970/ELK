## code: language=ansible
---
- name: Install and Configure Packetbeat, Metricbeat & Filebeat on Debian 12 VMs
  tags:
    - never
    - install
  block:
    - name: Update APT package cache
      ansible.builtin.apt:
        update_cache: true

    # Install dependencies for downloading and extracting tar files
    - name: Install required dependencies
      ansible.builtin.apt:
        name:
          - curl
          - tar
          - wget
        state: present

    - name: Download Packetbeat, Metricbeat, Filebeat and Heartbeat .tar.gz packages
      ansible.builtin.get_url:
        url: "{{ elasticsearch_default_download }}{{ item.0 }}/{{ item.0 }}-{{ item.1 }}.tar.gz"
        dest: "/tmp"
        mode: '0644'
      loop: "{{ elk_services | zip(versions) | list }}"

    - name: Extract Packetbeat, Metricbeat & Filebeat
      ansible.builtin.unarchive:
        src: "/tmp/{{ item.0 }}-{{ item.1 }}.tar.gz"
        dest: "/opt"
        remote_src: true
      loop: "{{ elk_services | zip(versions) | list }}"

    - name: The ELK server IP is
      ansible.builtin.debug:
        msg: "{{ ELASTICSEARCH_IP }}"

    - name: Configure Packetbeat, Metricbeat & Filebeat in OPT
      ansible.builtin.template:
        src: "{{ item.0 }}.yml.j2"
        dest: "/opt/{{ item.0 }}-{{ item.1 }}"
        owner: root
        group: root
        mode: '0644'
      notify: "Restart {{ item.0 }}"
      loop: "{{ elk_services | zip(versions) | list }}"

    - name: Configure Packetbeat, Metricbeat & Filebeat in SYSTEMD
      ansible.builtin.template:
        src: "{{ item.0 }}.service.j2"
        dest: "/etc/systemd/system/{{ item.0 }}.service"
        owner: root
        group: root
        mode: '0644'
      notify: "Restart {{ item.0 }}"
      loop: "{{ elk_services | zip(versions) | list }}"
